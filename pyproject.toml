[tool.poetry]
name = "pipconf"
version = "1.0.0"
description = "Python's PIP configuration manager"
authors = [ "Jo√£o Paulo Carvalho <jjpaulo2@protonmail.com>" ]
repository = "https://github.com/jjpaulo2/pipconf"
license = "BSD-2-Clause"
readme = "readme.md"
packages = [{ include = "pipconf" }]
keywords = [ 
    "configurations",
    "configs",
    "settings",
    "pip",
    "pip.conf"
]
classifiers = [
    "Environment :: Console",
    "Topic :: Utilities",
    "Typing :: Typed"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/jjpaulo2/pipconf/issues"

[tool.poetry.dependencies]
python = "^3.9"
typer = "^0.9.0"
rich = "^13.7.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.4.1"
bandit = "^1.7.5"
ruff = "^0.5.6"
pytest = "^7.4.0"
pytest-randomly = "^3.13.0"
pytest-mock = "^3.14.0"
taskipy = "^1.13.0"

[tool.poetry.scripts]
pipconf = "pipconf.cli:main"

[tool.ruff]
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.taskipy.tasks]
tests = { cmd = "pytest", help = "Runs all unit tests" }
lint = { cmd = "ruff format && ruff check --fix", help = "Format and lint the code" }
security = { cmd = "bandit -c pyproject.toml -r fastrpa", help = "Check security issues on the code" }
check = { cmd = "ruff format --check && ruff check && mypy .", help = "Check code issues" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
